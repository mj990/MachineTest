@model MachineTest.Models.Product

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">@ViewBag.ErrorMessage</div>
}


<div class="container mt-4">
    <h2 class="mb-4">Create Product</h2>

    @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { novalidate = "novalidate" }))

    {
        <div class="card shadow p-4">
            <h4 class="mb-3">Product Details</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="mb-3">
                @Html.LabelFor(model => model.ProductName, new { @class = "form-label fw-bold" })
                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", placeholder = "Enter product name" })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.CategoryId, new { @class = "form-label fw-bold" })
                @Html.DropDownListFor(model => model.CategoryId, new SelectList(ViewBag.Categories, "CategoryId", "CategoryName"), "-- Select Category --", new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex justify-content-between">
                <a href="@Url.Action("Index")" class="btn btn-secondary">Back to List</a>
                <button type="submit" class="btn btn-primary">Create</button>
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
